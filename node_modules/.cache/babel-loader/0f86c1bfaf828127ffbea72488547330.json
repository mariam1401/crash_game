{"ast":null,"code":"import { call, put, takeLatest, all } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { USER_CASH_OUT_REQUEST } from \"../types/bet_actionType\";\nimport { userCashOutAsync, userCashOutAsyncFail, userCashOutAsyncSuccess } from \"../actions/userAuthAction\";\nexport function* userBet(_ref) {\n  let {\n    payload\n  } = _ref;\n\n  try {\n    // debugger;\n    const response = yield call(axios.get, 'http://18.156.177.65:8080/crash/cash_out', {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem(\"access_token\"),\n        \"Content-Type\": \"application/json\",\n        accept: \"application/json\"\n      }\n    });\n    yield put(userCashOutAsyncSuccess(response));\n  } catch (error) {\n    yield put(userCashOutAsyncFail(error.message));\n  }\n}\nexport default function* storesSagas() {\n  yield all([takeLatest(USER_CASH_OUT_REQUEST, userBet)]);\n}","map":{"version":3,"names":["call","put","takeLatest","all","axios","USER_CASH_OUT_REQUEST","userCashOutAsync","userCashOutAsyncFail","userCashOutAsyncSuccess","userBet","payload","response","get","headers","Authorization","localStorage","getItem","accept","error","message","storesSagas"],"sources":["/home/hp/Downloads/game (copy)/src/redux/saga/userCashOut.js"],"sourcesContent":["import {call,put,takeLatest,all} from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {USER_CASH_OUT_REQUEST} from \"../types/bet_actionType\";\nimport {userCashOutAsync, userCashOutAsyncFail, userCashOutAsyncSuccess} from \"../actions/userAuthAction\";\n\n\nexport function* userBet({payload}) {\n    try {\n        // debugger;\n        const response =  yield call(axios.get, 'http://18.156.177.65:8080/crash/cash_out',\n            {\n                headers: {Authorization:'Bearer ' + localStorage.getItem(\"access_token\"),\n                    \"Content-Type\": \"application/json\",\n                    accept: \"application/json\"\n                }});\n        yield put(userCashOutAsyncSuccess(response));\n    } catch (error) {\n        yield put(userCashOutAsyncFail(error.message));\n    }\n}\n\nexport default function* storesSagas() {\n    yield all([\n        takeLatest(USER_CASH_OUT_REQUEST, userBet),\n    ]);\n}"],"mappings":"AAAA,SAAQA,IAAR,EAAaC,GAAb,EAAiBC,UAAjB,EAA4BC,GAA5B,QAAsC,oBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,qBAAR,QAAoC,yBAApC;AACA,SAAQC,gBAAR,EAA0BC,oBAA1B,EAAgDC,uBAAhD,QAA8E,2BAA9E;AAGA,OAAO,UAAUC,OAAV,OAA6B;EAAA,IAAX;IAACC;EAAD,CAAW;;EAChC,IAAI;IACA;IACA,MAAMC,QAAQ,GAAI,MAAMX,IAAI,CAACI,KAAK,CAACQ,GAAP,EAAY,0CAAZ,EACxB;MACIC,OAAO,EAAE;QAACC,aAAa,EAAC,YAAYC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAA3B;QACL,gBAAgB,kBADX;QAELC,MAAM,EAAE;MAFH;IADb,CADwB,CAA5B;IAMA,MAAMhB,GAAG,CAACO,uBAAuB,CAACG,QAAD,CAAxB,CAAT;EACH,CATD,CASE,OAAOO,KAAP,EAAc;IACZ,MAAMjB,GAAG,CAACM,oBAAoB,CAACW,KAAK,CAACC,OAAP,CAArB,CAAT;EACH;AACJ;AAED,eAAe,UAAUC,WAAV,GAAwB;EACnC,MAAMjB,GAAG,CAAC,CACND,UAAU,CAACG,qBAAD,EAAwBI,OAAxB,CADJ,CAAD,CAAT;AAGH"},"metadata":{},"sourceType":"module"}